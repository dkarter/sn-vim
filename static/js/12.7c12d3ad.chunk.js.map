{"version":3,"sources":["../node_modules/codemirror/mode/tornado/tornado.js","../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","defineMode","keywords","tokenBase","stream","state","eatWhile","ch","next","eat","tokenize","inTag","close","match","RegExp","join","startState","token","config","htmlBase","getMode","tornadoInner","overlayMode","defineMIME","mod","require","base","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","defaultTags","script","style","maybeBackup","pat","cur","current","search","backUp","length","attrRegexpCache","getAttrRegexp","attr","regexp","getAttrValue","text","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","test","parserConfig","htmlMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","hasOwnProperty","modeSpec","endTagA","endTag","localState","localMode","eol","local","Pass"],"mappings":"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","file":"static/js/12.7c12d3ad.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"tornado:inner\", function() {\n    var keywords = [\"and\",\"as\",\"assert\",\"autoescape\",\"block\",\"break\",\"class\",\"comment\",\"context\",\n                    \"continue\",\"datetime\",\"def\",\"del\",\"elif\",\"else\",\"end\",\"escape\",\"except\",\n                    \"exec\",\"extends\",\"false\",\"finally\",\"for\",\"from\",\"global\",\"if\",\"import\",\"in\",\n                    \"include\",\"is\",\"json_encode\",\"lambda\",\"length\",\"linkify\",\"load\",\"module\",\n                    \"none\",\"not\",\"or\",\"pass\",\"print\",\"put\",\"raise\",\"raw\",\"return\",\"self\",\"set\",\n                    \"squeeze\",\"super\",\"true\",\"try\",\"url_escape\",\"while\",\"with\",\"without\",\"xhtml_escape\",\"yield\"];\n    keywords = new RegExp(\"^((\" + keywords.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase (stream, state) {\n      stream.eatWhile(/[^\\{]/);\n      var ch = stream.next();\n      if (ch == \"{\") {\n        if (ch = stream.eat(/\\{|%|#/)) {\n          state.tokenize = inTag(ch);\n          return \"tag\";\n        }\n      }\n    }\n    function inTag (close) {\n      if (close == \"{\") {\n        close = \"}\";\n      }\n      return function (stream, state) {\n        var ch = stream.next();\n        if ((ch == close) && stream.eat(\"}\")) {\n          state.tokenize = tokenBase;\n          return \"tag\";\n        }\n        if (stream.match(keywords)) {\n          return \"keyword\";\n        }\n        return close == \"#\" ? \"comment\" : \"string\";\n      };\n    }\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      }\n    };\n  });\n\n  CodeMirror.defineMode(\"tornado\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var tornadoInner = CodeMirror.getMode(config, \"tornado:inner\");\n    return CodeMirror.overlayMode(htmlBase, tornadoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-tornado\", \"tornado\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}