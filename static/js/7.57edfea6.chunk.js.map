{"version":3,"sources":["../node_modules/codemirror/mode/vue/vue.js","../node_modules/codemirror/addon/mode/simple.js","../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/addon/mode/multiplex.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/coffeescript/coffeescript.js","../node_modules/codemirror/mode/handlebars/handlebars.js","../node_modules/codemirror/mode/pug/pug.js","../node_modules/codemirror/mode/sass/sass.js"],"names":["mod","CodeMirror","tagLanguages","script","style","template","defineMode","config","parserConfig","mustacheOverlay","token","stream","match","next","overlayMode","getMode","backdrop","name","tags","defineMIME","require","ensureState","states","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","apply","replace","result","i","length","push","Rule","data","this","regex","tokenFunction","state","pending","pend","shift","pos","text","local","end","tok","endToken","localState","m","mode","endScan","exec","current","start","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","lState","startState","forceEnd","indexOf","arr","indentFunction","meta","textAfter","line","dontIndentStates","Pass","rules","scan","dedentIfLineStart","slice","defineSimpleMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode","base","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","combineTokens","electricChars","blankLine","baseToken","overlayToken","multiplexingMode","outer","others","Array","prototype","call","arguments","string","pattern","from","returnEnd","found","innerActive","inner","curInner","oldContent","close","parseDelimiters","delimStyle","innerToken","innerStyle","cutOff","Infinity","other","open","outerIndent","possibleOuterIndent","outerToken","defaultTags","maybeBackup","pat","cur","search","attrRegexpCache","getAttrRegexp","attr","regexp","getAttrValue","getTagRegexp","tagName","anchored","addTags","to","tag","dest","unshift","findMatchingMode","tagInfo","tagText","test","htmlMode","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","configTags","configScript","scriptTypes","html","htmlState","toLowerCase","inTag","modeSpec","endTagA","endTag","localMode","eol","conf","parserConf","ERRORCLASS","wordRegexp","words","operators","delimiters","identifiers","atProp","wordOperators","indentKeywords","commonKeywords","keywords","concat","stringPrefixes","regexPrefixes","constants","tokenBase","scope","align","scopeOffset","offset","eatSpace","lineOffset","type","ch","peek","skipToEnd","tokenize","longComment","floatLiteral","intLiteral","tokenFactory","delimiter","singleline","outclass","eatWhile","eat","singleLineStringErrors","alignOffset","prev","column","_indent","matched","tokenLexer","delimiter_index","basecolumn","fillAlign","closer","charAt","closes","lineComment","fold","handlebars_raw","handlebars","dash_comment","comment","blockCommentStart","blockCommentEnd","KEYWORD","DOCTYPE","ID","CLASS","ATTRS_NEST","jsMode","State","javaScriptLine","javaScriptLineExcludesColon","javaScriptArguments","javaScriptArgumentsDepth","isInterpolating","interpolationNesting","jsState","restOfLine","isIncludeFiltered","isEach","lastTag","scriptType","isAttrs","attrsNest","inAttributeName","attributeIsType","attrValue","indentOf","indentToken","innerState","innerModeForLine","javaScript","yieldStatement","doctype","interpolation","interpolationContinued","caseStatement","when","defaultStatement","extendsStatement","append","prepend","block","include","includeFiltered","includeFilteredContinued","filter","mixin","mixinCallAfter","callArguments","conditional","each","eachContinued","whileStatement","captures","innerModes","substring","setInnerMode","code","id","className","attrs","attrsContinued","trim","toString","Function","ex","attributesBlock","colon","dot","fail","mimeModes","force","hideFirstChars","copy","nextToken","res","cssMode","propertyKeywords","colorKeywords","valueKeywords","fontProperties","tokenRegexp","word","keywordsRegexp","opRegexp","pseudoElementsRegexp","isEndLine","urlTokens","tokenizer","buildStringTokenizer","multiLine","skipTo","quote","greedy","stringTokenizer","nextChar","peekChar","previousChar","cursorHalf","buildInterpolationTokenizer","currentTokenizer","indentCount","currentOffset","scopes","prevProp","withCurrentIndent","newScopes","definedVars","definedMixins","lastToken","content"],"mappings":"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","file":"static/js/7.57edfea6.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  \"use strict\";\n  if (typeof exports === \"object\" && typeof module === \"object\") {// CommonJS\n    mod(require(\"../../lib/codemirror\"),\n        require(\"../../addon/mode/overlay\"),\n        require(\"../xml/xml\"),\n        require(\"../javascript/javascript\"),\n        require(\"../coffeescript/coffeescript\"),\n        require(\"../css/css\"),\n        require(\"../sass/sass\"),\n        require(\"../stylus/stylus\"),\n        require(\"../pug/pug\"),\n        require(\"../handlebars/handlebars\"));\n  } else if (typeof define === \"function\" && define.amd) { // AMD\n    define([\"../../lib/codemirror\",\n            \"../../addon/mode/overlay\",\n            \"../xml/xml\",\n            \"../javascript/javascript\",\n            \"../coffeescript/coffeescript\",\n            \"../css/css\",\n            \"../sass/sass\",\n            \"../stylus/stylus\",\n            \"../pug/pug\",\n            \"../handlebars/handlebars\"], mod);\n  } else { // Plain browser env\n    mod(CodeMirror);\n  }\n})(function (CodeMirror) {\n  var tagLanguages = {\n    script: [\n      [\"lang\", /coffee(script)?/, \"coffeescript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?coffee(?:script)?$/, \"coffeescript\"],\n      [\"lang\", /^babel$/, \"javascript\"],\n      [\"type\", /^text\\/babel$/, \"javascript\"],\n      [\"type\", /^text\\/ecmascript-\\d+$/, \"javascript\"]\n    ],\n    style: [\n      [\"lang\", /^stylus$/i, \"stylus\"],\n      [\"lang\", /^sass$/i, \"sass\"],\n      [\"lang\", /^less$/i, \"text/x-less\"],\n      [\"lang\", /^scss$/i, \"text/x-scss\"],\n      [\"type\", /^(text\\/)?(x-)?styl(us)?$/i, \"stylus\"],\n      [\"type\", /^text\\/sass/i, \"sass\"],\n      [\"type\", /^(text\\/)?(x-)?scss$/i, \"text/x-scss\"],\n      [\"type\", /^(text\\/)?(x-)?less$/i, \"text/x-less\"]\n    ],\n    template: [\n      [\"lang\", /^vue-template$/i, \"vue\"],\n      [\"lang\", /^pug$/i, \"pug\"],\n      [\"lang\", /^handlebars$/i, \"handlebars\"],\n      [\"type\", /^(text\\/)?(x-)?pug$/i, \"pug\"],\n      [\"type\", /^text\\/x-handlebars-template$/i, \"handlebars\"],\n      [null, null, \"vue-template\"]\n    ]\n  };\n\n  CodeMirror.defineMode(\"vue-template\", function (config, parserConfig) {\n    var mustacheOverlay = {\n      token: function (stream) {\n        if (stream.match(/^\\{\\{.*?\\}\\}/)) return \"meta mustache\";\n        while (stream.next() && !stream.match(\"{{\", false)) {}\n        return null;\n      }\n    };\n    return CodeMirror.overlayMode(CodeMirror.getMode(config, parserConfig.backdrop || \"text/html\"), mustacheOverlay);\n  });\n\n  CodeMirror.defineMode(\"vue\", function (config) {\n    return CodeMirror.getMode(config, {name: \"htmlmixed\", tags: tagLanguages});\n  }, \"htmlmixed\", \"xml\", \"javascript\", \"coffeescript\", \"css\", \"sass\", \"stylus\", \"pug\", \"handlebars\");\n\n  CodeMirror.defineMIME(\"script/x-vue\", \"vue\");\n  CodeMirror.defineMIME(\"text/x-vue\", \"vue\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/pickhardt/coffeescript-codemirror-mode\n */\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"coffeescript\", function(conf, parserConf) {\n  var ERRORCLASS = \"error\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\n  var delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\n  var identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\n  var atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\",\n                                  \"is\", \"isnt\", \"in\",\n                                  \"instanceof\", \"typeof\"]);\n  var indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\",\n                        \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\n  var commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\",\n                        \"do\", \"in\", \"of\", \"new\", \"return\", \"then\",\n                        \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n\n  var keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n\n  indentKeywords = wordRegexp(indentKeywords);\n\n\n  var stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\n  var regexPrefixes = /^(\\/{3}|\\/)/;\n  var commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\n  var constants = wordRegexp(commonConstants);\n\n  // Tokenizers\n  function tokenBase(stream, state) {\n    // Handle scope changes\n    if (stream.sol()) {\n      if (state.scope.align === null) state.scope.align = false;\n      var scopeOffset = state.scope.offset;\n      if (stream.eatSpace()) {\n        var lineOffset = stream.indentation();\n        if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n          return \"indent\";\n        } else if (lineOffset < scopeOffset) {\n          return \"dedent\";\n        }\n        return null;\n      } else {\n        if (scopeOffset > 0) {\n          dedent(stream, state);\n        }\n      }\n    }\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var ch = stream.peek();\n\n    // Handle docco title comment (single line)\n    if (stream.match(\"####\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle multi line comments\n    if (stream.match(\"###\")) {\n      state.tokenize = longComment;\n      return state.tokenize(stream, state);\n    }\n\n    // Single line comment\n    if (ch === \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle number literals\n    if (stream.match(/^-?[0-9\\.]/, false)) {\n      var floatLiteral = false;\n      // Floats\n      if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\d+\\.\\d*/)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\.\\d+/)) {\n        floatLiteral = true;\n      }\n\n      if (floatLiteral) {\n        // prevent from getting extra . on 1..\n        if (stream.peek() == \".\"){\n          stream.backUp(1);\n        }\n        return \"number\";\n      }\n      // Integers\n      var intLiteral = false;\n      // Hex\n      if (stream.match(/^-?0x[0-9a-f]+/i)) {\n        intLiteral = true;\n      }\n      // Decimal\n      if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n        intLiteral = true;\n      }\n      // Zero by itself with no other piece of number.\n      if (stream.match(/^-?0(?![\\dx])/i)) {\n        intLiteral = true;\n      }\n      if (intLiteral) {\n        return \"number\";\n      }\n    }\n\n    // Handle strings\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenFactory(stream.current(), false, \"string\");\n      return state.tokenize(stream, state);\n    }\n    // Handle regex literals\n    if (stream.match(regexPrefixes)) {\n      if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) { // prevent highlight of division\n        state.tokenize = tokenFactory(stream.current(), true, \"string-2\");\n        return state.tokenize(stream, state);\n      } else {\n        stream.backUp(1);\n      }\n    }\n\n\n\n    // Handle operators and delimiters\n    if (stream.match(operators) || stream.match(wordOperators)) {\n      return \"operator\";\n    }\n    if (stream.match(delimiters)) {\n      return \"punctuation\";\n    }\n\n    if (stream.match(constants)) {\n      return \"atom\";\n    }\n\n    if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n      return \"property\";\n    }\n\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n\n    if (stream.match(identifiers)) {\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return ERRORCLASS;\n  }\n\n  function tokenFactory(delimiter, singleline, outclass) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"\\/\\\\]/);\n        if (stream.eat(\"\\\\\")) {\n          stream.next();\n          if (singleline && stream.eol()) {\n            return outclass;\n          }\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenBase;\n          return outclass;\n        } else {\n          stream.eat(/['\"\\/]/);\n        }\n      }\n      if (singleline) {\n        if (parserConf.singleLineStringErrors) {\n          outclass = ERRORCLASS;\n        } else {\n          state.tokenize = tokenBase;\n        }\n      }\n      return outclass;\n    };\n  }\n\n  function longComment(stream, state) {\n    while (!stream.eol()) {\n      stream.eatWhile(/[^#]/);\n      if (stream.match(\"###\")) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      stream.eatWhile(\"#\");\n    }\n    return \"comment\";\n  }\n\n  function indent(stream, state, type) {\n    type = type || \"coffee\";\n    var offset = 0, align = false, alignOffset = null;\n    for (var scope = state.scope; scope; scope = scope.prev) {\n      if (scope.type === \"coffee\" || scope.type == \"}\") {\n        offset = scope.offset + conf.indentUnit;\n        break;\n      }\n    }\n    if (type !== \"coffee\") {\n      align = null;\n      alignOffset = stream.column() + stream.current().length;\n    } else if (state.scope.align) {\n      state.scope.align = false;\n    }\n    state.scope = {\n      offset: offset,\n      type: type,\n      prev: state.scope,\n      align: align,\n      alignOffset: alignOffset\n    };\n  }\n\n  function dedent(stream, state) {\n    if (!state.scope.prev) return;\n    if (state.scope.type === \"coffee\") {\n      var _indent = stream.indentation();\n      var matched = false;\n      for (var scope = state.scope; scope; scope = scope.prev) {\n        if (_indent === scope.offset) {\n          matched = true;\n          break;\n        }\n      }\n      if (!matched) {\n        return true;\n      }\n      while (state.scope.prev && state.scope.offset !== _indent) {\n        state.scope = state.scope.prev;\n      }\n      return false;\n    } else {\n      state.scope = state.scope.prev;\n      return false;\n    }\n  }\n\n  function tokenLexer(stream, state) {\n    var style = state.tokenize(stream, state);\n    var current = stream.current();\n\n    // Handle scope changes.\n    if (current === \"return\") {\n      state.dedent = true;\n    }\n    if (((current === \"->\" || current === \"=>\") && stream.eol())\n        || style === \"indent\") {\n      indent(stream, state);\n    }\n    var delimiter_index = \"[({\".indexOf(current);\n    if (delimiter_index !== -1) {\n      indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n    }\n    if (indentKeywords.exec(current)){\n      indent(stream, state);\n    }\n    if (current == \"then\"){\n      dedent(stream, state);\n    }\n\n\n    if (style === \"dedent\") {\n      if (dedent(stream, state)) {\n        return ERRORCLASS;\n      }\n    }\n    delimiter_index = \"])}\".indexOf(current);\n    if (delimiter_index !== -1) {\n      while (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      if (state.scope.type == current)\n        state.scope = state.scope.prev;\n    }\n    if (state.dedent && stream.eol()) {\n      if (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      state.dedent = false;\n    }\n\n    return style;\n  }\n\n  var external = {\n    startState: function(basecolumn) {\n      return {\n        tokenize: tokenBase,\n        scope: {offset:basecolumn || 0, type:\"coffee\", prev: null, align: false},\n        prop: false,\n        dedent: 0\n      };\n    },\n\n    token: function(stream, state) {\n      var fillAlign = state.scope.align === null && state.scope;\n      if (fillAlign && stream.sol()) fillAlign.align = false;\n\n      var style = tokenLexer(stream, state);\n      if (style && style != \"comment\") {\n        if (fillAlign) fillAlign.align = true;\n        state.prop = style == \"punctuation\" && stream.current() == \".\"\n      }\n\n      return style;\n    },\n\n    indent: function(state, text) {\n      if (state.tokenize != tokenBase) return 0;\n      var scope = state.scope;\n      var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n      if (closer) while (scope.type == \"coffee\" && scope.prev) scope = scope.prev;\n      var closes = closer && scope.type === text.charAt(0);\n      if (scope.align)\n        return scope.alignOffset - (closes ? 1 : 0);\n      else\n        return (closes ? scope.prev : scope).offset;\n    },\n\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n  return external;\n});\n\n// IANA registered media type\n// https://www.iana.org/assignments/media-types/\nCodeMirror.defineMIME(\"application/vnd.coffeescript\", \"coffeescript\");\n\nCodeMirror.defineMIME(\"text/x-coffeescript\", \"coffeescript\");\nCodeMirror.defineMIME(\"text/coffeescript\", \"coffeescript\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [\n      { regex: /\\{\\{\\{/, push: \"handlebars_raw\", token: \"tag\" },\n      { regex: /\\{\\{!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\{\\{!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\{\\{/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars_raw: [\n      { regex: /\\}\\}\\}/, pop: true, token: \"tag\" },\n    ],\n    handlebars: [\n      { regex: /\\}\\}/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n      { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n\n      // Handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\}\\}/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\}\\}/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n\n  CodeMirror.defineMode(\"handlebars\", function(config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base),\n      {open: \"{{\", close: /\\}\\}\\}?/, mode: handlebars, parseDelimiters: true}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"), require(\"../css/css\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\", \"../css/css\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"pug\", function (config) {\n  // token types\n  var KEYWORD = 'keyword';\n  var DOCTYPE = 'meta';\n  var ID = 'builtin';\n  var CLASS = 'qualifier';\n\n  var ATTRS_NEST = {\n    '{': '}',\n    '(': ')',\n    '[': ']'\n  };\n\n  var jsMode = CodeMirror.getMode(config, 'javascript');\n\n  function State() {\n    this.javaScriptLine = false;\n    this.javaScriptLineExcludesColon = false;\n\n    this.javaScriptArguments = false;\n    this.javaScriptArgumentsDepth = 0;\n\n    this.isInterpolating = false;\n    this.interpolationNesting = 0;\n\n    this.jsState = CodeMirror.startState(jsMode);\n\n    this.restOfLine = '';\n\n    this.isIncludeFiltered = false;\n    this.isEach = false;\n\n    this.lastTag = '';\n    this.scriptType = '';\n\n    // Attributes Mode\n    this.isAttrs = false;\n    this.attrsNest = [];\n    this.inAttributeName = true;\n    this.attributeIsType = false;\n    this.attrValue = '';\n\n    // Indented Mode\n    this.indentOf = Infinity;\n    this.indentToken = '';\n\n    this.innerMode = null;\n    this.innerState = null;\n\n    this.innerModeForLine = false;\n  }\n  /**\n   * Safely copy a state\n   *\n   * @return {State}\n   */\n  State.prototype.copy = function () {\n    var res = new State();\n    res.javaScriptLine = this.javaScriptLine;\n    res.javaScriptLineExcludesColon = this.javaScriptLineExcludesColon;\n    res.javaScriptArguments = this.javaScriptArguments;\n    res.javaScriptArgumentsDepth = this.javaScriptArgumentsDepth;\n    res.isInterpolating = this.isInterpolating;\n    res.interpolationNesting = this.interpolationNesting;\n\n    res.jsState = CodeMirror.copyState(jsMode, this.jsState);\n\n    res.innerMode = this.innerMode;\n    if (this.innerMode && this.innerState) {\n      res.innerState = CodeMirror.copyState(this.innerMode, this.innerState);\n    }\n\n    res.restOfLine = this.restOfLine;\n\n    res.isIncludeFiltered = this.isIncludeFiltered;\n    res.isEach = this.isEach;\n    res.lastTag = this.lastTag;\n    res.scriptType = this.scriptType;\n    res.isAttrs = this.isAttrs;\n    res.attrsNest = this.attrsNest.slice();\n    res.inAttributeName = this.inAttributeName;\n    res.attributeIsType = this.attributeIsType;\n    res.attrValue = this.attrValue;\n    res.indentOf = this.indentOf;\n    res.indentToken = this.indentToken;\n\n    res.innerModeForLine = this.innerModeForLine;\n\n    return res;\n  };\n\n  function javaScript(stream, state) {\n    if (stream.sol()) {\n      // if javaScriptLine was set at end of line, ignore it\n      state.javaScriptLine = false;\n      state.javaScriptLineExcludesColon = false;\n    }\n    if (state.javaScriptLine) {\n      if (state.javaScriptLineExcludesColon && stream.peek() === ':') {\n        state.javaScriptLine = false;\n        state.javaScriptLineExcludesColon = false;\n        return;\n      }\n      var tok = jsMode.token(stream, state.jsState);\n      if (stream.eol()) state.javaScriptLine = false;\n      return tok || true;\n    }\n  }\n  function javaScriptArguments(stream, state) {\n    if (state.javaScriptArguments) {\n      if (state.javaScriptArgumentsDepth === 0 && stream.peek() !== '(') {\n        state.javaScriptArguments = false;\n        return;\n      }\n      if (stream.peek() === '(') {\n        state.javaScriptArgumentsDepth++;\n      } else if (stream.peek() === ')') {\n        state.javaScriptArgumentsDepth--;\n      }\n      if (state.javaScriptArgumentsDepth === 0) {\n        state.javaScriptArguments = false;\n        return;\n      }\n\n      var tok = jsMode.token(stream, state.jsState);\n      return tok || true;\n    }\n  }\n\n  function yieldStatement(stream) {\n    if (stream.match(/^yield\\b/)) {\n        return 'keyword';\n    }\n  }\n\n  function doctype(stream) {\n    if (stream.match(/^(?:doctype) *([^\\n]+)?/)) {\n        return DOCTYPE;\n    }\n  }\n\n  function interpolation(stream, state) {\n    if (stream.match('#{')) {\n      state.isInterpolating = true;\n      state.interpolationNesting = 0;\n      return 'punctuation';\n    }\n  }\n\n  function interpolationContinued(stream, state) {\n    if (state.isInterpolating) {\n      if (stream.peek() === '}') {\n        state.interpolationNesting--;\n        if (state.interpolationNesting < 0) {\n          stream.next();\n          state.isInterpolating = false;\n          return 'punctuation';\n        }\n      } else if (stream.peek() === '{') {\n        state.interpolationNesting++;\n      }\n      return jsMode.token(stream, state.jsState) || true;\n    }\n  }\n\n  function caseStatement(stream, state) {\n    if (stream.match(/^case\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function when(stream, state) {\n    if (stream.match(/^when\\b/)) {\n      state.javaScriptLine = true;\n      state.javaScriptLineExcludesColon = true;\n      return KEYWORD;\n    }\n  }\n\n  function defaultStatement(stream) {\n    if (stream.match(/^default\\b/)) {\n      return KEYWORD;\n    }\n  }\n\n  function extendsStatement(stream, state) {\n    if (stream.match(/^extends?\\b/)) {\n      state.restOfLine = 'string';\n      return KEYWORD;\n    }\n  }\n\n  function append(stream, state) {\n    if (stream.match(/^append\\b/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n  function prepend(stream, state) {\n    if (stream.match(/^prepend\\b/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n  function block(stream, state) {\n    if (stream.match(/^block\\b *(?:(prepend|append)\\b)?/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n\n  function include(stream, state) {\n    if (stream.match(/^include\\b/)) {\n      state.restOfLine = 'string';\n      return KEYWORD;\n    }\n  }\n\n  function includeFiltered(stream, state) {\n    if (stream.match(/^include:([a-zA-Z0-9\\-]+)/, false) && stream.match('include')) {\n      state.isIncludeFiltered = true;\n      return KEYWORD;\n    }\n  }\n\n  function includeFilteredContinued(stream, state) {\n    if (state.isIncludeFiltered) {\n      var tok = filter(stream, state);\n      state.isIncludeFiltered = false;\n      state.restOfLine = 'string';\n      return tok;\n    }\n  }\n\n  function mixin(stream, state) {\n    if (stream.match(/^mixin\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function call(stream, state) {\n    if (stream.match(/^\\+([-\\w]+)/)) {\n      if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n      }\n      return 'variable';\n    }\n    if (stream.match('+#{', false)) {\n      stream.next();\n      state.mixinCallAfter = true;\n      return interpolation(stream, state);\n    }\n  }\n  function callArguments(stream, state) {\n    if (state.mixinCallAfter) {\n      state.mixinCallAfter = false;\n      if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n      }\n      return true;\n    }\n  }\n\n  function conditional(stream, state) {\n    if (stream.match(/^(if|unless|else if|else)\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function each(stream, state) {\n    if (stream.match(/^(- *)?(each|for)\\b/)) {\n      state.isEach = true;\n      return KEYWORD;\n    }\n  }\n  function eachContinued(stream, state) {\n    if (state.isEach) {\n      if (stream.match(/^ in\\b/)) {\n        state.javaScriptLine = true;\n        state.isEach = false;\n        return KEYWORD;\n      } else if (stream.sol() || stream.eol()) {\n        state.isEach = false;\n      } else if (stream.next()) {\n        while (!stream.match(/^ in\\b/, false) && stream.next());\n        return 'variable';\n      }\n    }\n  }\n\n  function whileStatement(stream, state) {\n    if (stream.match(/^while\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function tag(stream, state) {\n    var captures;\n    if (captures = stream.match(/^(\\w(?:[-:\\w]*\\w)?)\\/?/)) {\n      state.lastTag = captures[1].toLowerCase();\n      if (state.lastTag === 'script') {\n        state.scriptType = 'application/javascript';\n      }\n      return 'tag';\n    }\n  }\n\n  function filter(stream, state) {\n    if (stream.match(/^:([\\w\\-]+)/)) {\n      var innerMode;\n      if (config && config.innerModes) {\n        innerMode = config.innerModes(stream.current().substring(1));\n      }\n      if (!innerMode) {\n        innerMode = stream.current().substring(1);\n      }\n      if (typeof innerMode === 'string') {\n        innerMode = CodeMirror.getMode(config, innerMode);\n      }\n      setInnerMode(stream, state, innerMode);\n      return 'atom';\n    }\n  }\n\n  function code(stream, state) {\n    if (stream.match(/^(!?=|-)/)) {\n      state.javaScriptLine = true;\n      return 'punctuation';\n    }\n  }\n\n  function id(stream) {\n    if (stream.match(/^#([\\w-]+)/)) {\n      return ID;\n    }\n  }\n\n  function className(stream) {\n    if (stream.match(/^\\.([\\w-]+)/)) {\n      return CLASS;\n    }\n  }\n\n  function attrs(stream, state) {\n    if (stream.peek() == '(') {\n      stream.next();\n      state.isAttrs = true;\n      state.attrsNest = [];\n      state.inAttributeName = true;\n      state.attrValue = '';\n      state.attributeIsType = false;\n      return 'punctuation';\n    }\n  }\n\n  function attrsContinued(stream, state) {\n    if (state.isAttrs) {\n      if (ATTRS_NEST[stream.peek()]) {\n        state.attrsNest.push(ATTRS_NEST[stream.peek()]);\n      }\n      if (state.attrsNest[state.attrsNest.length - 1] === stream.peek()) {\n        state.attrsNest.pop();\n      } else  if (stream.eat(')')) {\n        state.isAttrs = false;\n        return 'punctuation';\n      }\n      if (state.inAttributeName && stream.match(/^[^=,\\)!]+/)) {\n        if (stream.peek() === '=' || stream.peek() === '!') {\n          state.inAttributeName = false;\n          state.jsState = CodeMirror.startState(jsMode);\n          if (state.lastTag === 'script' && stream.current().trim().toLowerCase() === 'type') {\n            state.attributeIsType = true;\n          } else {\n            state.attributeIsType = false;\n          }\n        }\n        return 'attribute';\n      }\n\n      var tok = jsMode.token(stream, state.jsState);\n      if (state.attributeIsType && tok === 'string') {\n        state.scriptType = stream.current().toString();\n      }\n      if (state.attrsNest.length === 0 && (tok === 'string' || tok === 'variable' || tok === 'keyword')) {\n        try {\n          Function('', 'var x ' + state.attrValue.replace(/,\\s*$/, '').replace(/^!/, ''));\n          state.inAttributeName = true;\n          state.attrValue = '';\n          stream.backUp(stream.current().length);\n          return attrsContinued(stream, state);\n        } catch (ex) {\n          //not the end of an attribute\n        }\n      }\n      state.attrValue += stream.current();\n      return tok || true;\n    }\n  }\n\n  function attributesBlock(stream, state) {\n    if (stream.match(/^&attributes\\b/)) {\n      state.javaScriptArguments = true;\n      state.javaScriptArgumentsDepth = 0;\n      return 'keyword';\n    }\n  }\n\n  function indent(stream) {\n    if (stream.sol() && stream.eatSpace()) {\n      return 'indent';\n    }\n  }\n\n  function comment(stream, state) {\n    if (stream.match(/^ *\\/\\/(-)?([^\\n]*)/)) {\n      state.indentOf = stream.indentation();\n      state.indentToken = 'comment';\n      return 'comment';\n    }\n  }\n\n  function colon(stream) {\n    if (stream.match(/^: */)) {\n      return 'colon';\n    }\n  }\n\n  function text(stream, state) {\n    if (stream.match(/^(?:\\| ?| )([^\\n]+)/)) {\n      return 'string';\n    }\n    if (stream.match(/^(<[^\\n]*)/, false)) {\n      // html string\n      setInnerMode(stream, state, 'htmlmixed');\n      state.innerModeForLine = true;\n      return innerMode(stream, state, true);\n    }\n  }\n\n  function dot(stream, state) {\n    if (stream.eat('.')) {\n      var innerMode = null;\n      if (state.lastTag === 'script' && state.scriptType.toLowerCase().indexOf('javascript') != -1) {\n        innerMode = state.scriptType.toLowerCase().replace(/\"|'/g, '');\n      } else if (state.lastTag === 'style') {\n        innerMode = 'css';\n      }\n      setInnerMode(stream, state, innerMode);\n      return 'dot';\n    }\n  }\n\n  function fail(stream) {\n    stream.next();\n    return null;\n  }\n\n\n  function setInnerMode(stream, state, mode) {\n    mode = CodeMirror.mimeModes[mode] || mode;\n    mode = config.innerModes ? config.innerModes(mode) || mode : mode;\n    mode = CodeMirror.mimeModes[mode] || mode;\n    mode = CodeMirror.getMode(config, mode);\n    state.indentOf = stream.indentation();\n\n    if (mode && mode.name !== 'null') {\n      state.innerMode = mode;\n    } else {\n      state.indentToken = 'string';\n    }\n  }\n  function innerMode(stream, state, force) {\n    if (stream.indentation() > state.indentOf || (state.innerModeForLine && !stream.sol()) || force) {\n      if (state.innerMode) {\n        if (!state.innerState) {\n          state.innerState = state.innerMode.startState ? CodeMirror.startState(state.innerMode, stream.indentation()) : {};\n        }\n        return stream.hideFirstChars(state.indentOf + 2, function () {\n          return state.innerMode.token(stream, state.innerState) || true;\n        });\n      } else {\n        stream.skipToEnd();\n        return state.indentToken;\n      }\n    } else if (stream.sol()) {\n      state.indentOf = Infinity;\n      state.indentToken = null;\n      state.innerMode = null;\n      state.innerState = null;\n    }\n  }\n  function restOfLine(stream, state) {\n    if (stream.sol()) {\n      // if restOfLine was set at end of line, ignore it\n      state.restOfLine = '';\n    }\n    if (state.restOfLine) {\n      stream.skipToEnd();\n      var tok = state.restOfLine;\n      state.restOfLine = '';\n      return tok;\n    }\n  }\n\n\n  function startState() {\n    return new State();\n  }\n  function copyState(state) {\n    return state.copy();\n  }\n  /**\n   * Get the next token in the stream\n   *\n   * @param {Stream} stream\n   * @param {State} state\n   */\n  function nextToken(stream, state) {\n    var tok = innerMode(stream, state)\n      || restOfLine(stream, state)\n      || interpolationContinued(stream, state)\n      || includeFilteredContinued(stream, state)\n      || eachContinued(stream, state)\n      || attrsContinued(stream, state)\n      || javaScript(stream, state)\n      || javaScriptArguments(stream, state)\n      || callArguments(stream, state)\n\n      || yieldStatement(stream)\n      || doctype(stream)\n      || interpolation(stream, state)\n      || caseStatement(stream, state)\n      || when(stream, state)\n      || defaultStatement(stream)\n      || extendsStatement(stream, state)\n      || append(stream, state)\n      || prepend(stream, state)\n      || block(stream, state)\n      || include(stream, state)\n      || includeFiltered(stream, state)\n      || mixin(stream, state)\n      || call(stream, state)\n      || conditional(stream, state)\n      || each(stream, state)\n      || whileStatement(stream, state)\n      || tag(stream, state)\n      || filter(stream, state)\n      || code(stream, state)\n      || id(stream)\n      || className(stream)\n      || attrs(stream, state)\n      || attributesBlock(stream, state)\n      || indent(stream)\n      || text(stream, state)\n      || comment(stream, state)\n      || colon(stream)\n      || dot(stream, state)\n      || fail(stream);\n\n    return tok === true ? null : tok;\n  }\n  return {\n    startState: startState,\n    copyState: copyState,\n    token: nextToken\n  };\n}, 'javascript', 'css', 'htmlmixed');\n\nCodeMirror.defineMIME('text/x-pug', 'pug');\nCodeMirror.defineMIME('text/x-jade', 'pug');\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"sass\", function(config) {\n  var cssMode = CodeMirror.mimeModes[\"text/css\"];\n  var propertyKeywords = cssMode.propertyKeywords || {},\n      colorKeywords = cssMode.colorKeywords || {},\n      valueKeywords = cssMode.valueKeywords || {},\n      fontProperties = cssMode.fontProperties || {};\n\n  function tokenRegexp(words) {\n    return new RegExp(\"^\" + words.join(\"|\"));\n  }\n\n  var keywords = [\"true\", \"false\", \"null\", \"auto\"];\n  var keywordsRegexp = new RegExp(\"^\" + keywords.join(\"|\"));\n\n  var operators = [\"\\\\(\", \"\\\\)\", \"=\", \">\", \"<\", \"==\", \">=\", \"<=\", \"\\\\+\", \"-\",\n                   \"\\\\!=\", \"/\", \"\\\\*\", \"%\", \"and\", \"or\", \"not\", \";\",\"\\\\{\",\"\\\\}\",\":\"];\n  var opRegexp = tokenRegexp(operators);\n\n  var pseudoElementsRegexp = /^::?[a-zA-Z_][\\w\\-]*/;\n\n  var word;\n\n  function isEndLine(stream) {\n    return !stream.peek() || stream.match(/\\s+$/, false);\n  }\n\n  function urlTokens(stream, state) {\n    var ch = stream.peek();\n\n    if (ch === \")\") {\n      stream.next();\n      state.tokenizer = tokenBase;\n      return \"operator\";\n    } else if (ch === \"(\") {\n      stream.next();\n      stream.eatSpace();\n\n      return \"operator\";\n    } else if (ch === \"'\" || ch === '\"') {\n      state.tokenizer = buildStringTokenizer(stream.next());\n      return \"string\";\n    } else {\n      state.tokenizer = buildStringTokenizer(\")\", false);\n      return \"string\";\n    }\n  }\n  function comment(indentation, multiLine) {\n    return function(stream, state) {\n      if (stream.sol() && stream.indentation() <= indentation) {\n        state.tokenizer = tokenBase;\n        return tokenBase(stream, state);\n      }\n\n      if (multiLine && stream.skipTo(\"*/\")) {\n        stream.next();\n        stream.next();\n        state.tokenizer = tokenBase;\n      } else {\n        stream.skipToEnd();\n      }\n\n      return \"comment\";\n    };\n  }\n\n  function buildStringTokenizer(quote, greedy) {\n    if (greedy == null) { greedy = true; }\n\n    function stringTokenizer(stream, state) {\n      var nextChar = stream.next();\n      var peekChar = stream.peek();\n      var previousChar = stream.string.charAt(stream.pos-2);\n\n      var endingString = ((nextChar !== \"\\\\\" && peekChar === quote) || (nextChar === quote && previousChar !== \"\\\\\"));\n\n      if (endingString) {\n        if (nextChar !== quote && greedy) { stream.next(); }\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        state.tokenizer = tokenBase;\n        return \"string\";\n      } else if (nextChar === \"#\" && peekChar === \"{\") {\n        state.tokenizer = buildInterpolationTokenizer(stringTokenizer);\n        stream.next();\n        return \"operator\";\n      } else {\n        return \"string\";\n      }\n    }\n\n    return stringTokenizer;\n  }\n\n  function buildInterpolationTokenizer(currentTokenizer) {\n    return function(stream, state) {\n      if (stream.peek() === \"}\") {\n        stream.next();\n        state.tokenizer = currentTokenizer;\n        return \"operator\";\n      } else {\n        return tokenBase(stream, state);\n      }\n    };\n  }\n\n  function indent(state) {\n    if (state.indentCount == 0) {\n      state.indentCount++;\n      var lastScopeOffset = state.scopes[0].offset;\n      var currentOffset = lastScopeOffset + config.indentUnit;\n      state.scopes.unshift({ offset:currentOffset });\n    }\n  }\n\n  function dedent(state) {\n    if (state.scopes.length == 1) return;\n\n    state.scopes.shift();\n  }\n\n  function tokenBase(stream, state) {\n    var ch = stream.peek();\n\n    // Comment\n    if (stream.match(\"/*\")) {\n      state.tokenizer = comment(stream.indentation(), true);\n      return state.tokenizer(stream, state);\n    }\n    if (stream.match(\"//\")) {\n      state.tokenizer = comment(stream.indentation(), false);\n      return state.tokenizer(stream, state);\n    }\n\n    // Interpolation\n    if (stream.match(\"#{\")) {\n      state.tokenizer = buildInterpolationTokenizer(tokenBase);\n      return \"operator\";\n    }\n\n    // Strings\n    if (ch === '\"' || ch === \"'\") {\n      stream.next();\n      state.tokenizer = buildStringTokenizer(ch);\n      return \"string\";\n    }\n\n    if(!state.cursorHalf){// state.cursorHalf === 0\n    // first half i.e. before : for key-value pairs\n    // including selectors\n\n      if (ch === \"-\") {\n        if (stream.match(/^-\\w+-/)) {\n          return \"meta\";\n        }\n      }\n\n      if (ch === \".\") {\n        stream.next();\n        if (stream.match(/^[\\w-]+/)) {\n          indent(state);\n          return \"qualifier\";\n        } else if (stream.peek() === \"#\") {\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      if (ch === \"#\") {\n        stream.next();\n        // ID selectors\n        if (stream.match(/^[\\w-]+/)) {\n          indent(state);\n          return \"builtin\";\n        }\n        if (stream.peek() === \"#\") {\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      // Variables\n      if (ch === \"$\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        return \"variable-2\";\n      }\n\n      // Numbers\n      if (stream.match(/^-?[0-9\\.]+/))\n        return \"number\";\n\n      // Units\n      if (stream.match(/^(px|em|in)\\b/))\n        return \"unit\";\n\n      if (stream.match(keywordsRegexp))\n        return \"keyword\";\n\n      if (stream.match(/^url/) && stream.peek() === \"(\") {\n        state.tokenizer = urlTokens;\n        return \"atom\";\n      }\n\n      if (ch === \"=\") {\n        // Match shortcut mixin definition\n        if (stream.match(/^=[\\w-]+/)) {\n          indent(state);\n          return \"meta\";\n        }\n      }\n\n      if (ch === \"+\") {\n        // Match shortcut mixin definition\n        if (stream.match(/^\\+[\\w-]+/)){\n          return \"variable-3\";\n        }\n      }\n\n      if(ch === \"@\"){\n        if(stream.match('@extend')){\n          if(!stream.match(/\\s*[\\w]/))\n            dedent(state);\n        }\n      }\n\n\n      // Indent Directives\n      if (stream.match(/^@(else if|if|media|else|for|each|while|mixin|function)/)) {\n        indent(state);\n        return \"def\";\n      }\n\n      // Other Directives\n      if (ch === \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        return \"def\";\n      }\n\n      if (stream.eatWhile(/[\\w-]/)){\n        if(stream.match(/ *: *[\\w-\\+\\$#!\\(\"']/,false)){\n          word = stream.current().toLowerCase();\n          var prop = state.prevProp + \"-\" + word;\n          if (propertyKeywords.hasOwnProperty(prop)) {\n            return \"property\";\n          } else if (propertyKeywords.hasOwnProperty(word)) {\n            state.prevProp = word;\n            return \"property\";\n          } else if (fontProperties.hasOwnProperty(word)) {\n            return \"property\";\n          }\n          return \"tag\";\n        }\n        else if(stream.match(/ *:/,false)){\n          indent(state);\n          state.cursorHalf = 1;\n          state.prevProp = stream.current().toLowerCase();\n          return \"property\";\n        }\n        else if(stream.match(/ *,/,false)){\n          return \"tag\";\n        }\n        else{\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      if(ch === \":\"){\n        if (stream.match(pseudoElementsRegexp)){ // could be a pseudo-element\n          return \"variable-3\";\n        }\n        stream.next();\n        state.cursorHalf=1;\n        return \"operator\";\n      }\n\n    } // cursorHalf===0 ends here\n    else{\n\n      if (ch === \"#\") {\n        stream.next();\n        // Hex numbers\n        if (stream.match(/[0-9a-fA-F]{6}|[0-9a-fA-F]{3}/)){\n          if (isEndLine(stream)) {\n            state.cursorHalf = 0;\n          }\n          return \"number\";\n        }\n      }\n\n      // Numbers\n      if (stream.match(/^-?[0-9\\.]+/)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"number\";\n      }\n\n      // Units\n      if (stream.match(/^(px|em|in)\\b/)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"unit\";\n      }\n\n      if (stream.match(keywordsRegexp)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"keyword\";\n      }\n\n      if (stream.match(/^url/) && stream.peek() === \"(\") {\n        state.tokenizer = urlTokens;\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"atom\";\n      }\n\n      // Variables\n      if (ch === \"$\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"variable-2\";\n      }\n\n      // bang character for !important, !default, etc.\n      if (ch === \"!\") {\n        stream.next();\n        state.cursorHalf = 0;\n        return stream.match(/^[\\w]+/) ? \"keyword\": \"operator\";\n      }\n\n      if (stream.match(opRegexp)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"operator\";\n      }\n\n      // attributes\n      if (stream.eatWhile(/[\\w-]/)) {\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        word = stream.current().toLowerCase();\n        if (valueKeywords.hasOwnProperty(word)) {\n          return \"atom\";\n        } else if (colorKeywords.hasOwnProperty(word)) {\n          return \"keyword\";\n        } else if (propertyKeywords.hasOwnProperty(word)) {\n          state.prevProp = stream.current().toLowerCase();\n          return \"property\";\n        } else {\n          return \"tag\";\n        }\n      }\n\n      //stream.eatSpace();\n      if (isEndLine(stream)) {\n        state.cursorHalf = 0;\n        return null;\n      }\n\n    } // else ends here\n\n    if (stream.match(opRegexp))\n      return \"operator\";\n\n    // If we haven't returned by now, we move 1 character\n    // and return an error\n    stream.next();\n    return null;\n  }\n\n  function tokenLexer(stream, state) {\n    if (stream.sol()) state.indentCount = 0;\n    var style = state.tokenizer(stream, state);\n    var current = stream.current();\n\n    if (current === \"@return\" || current === \"}\"){\n      dedent(state);\n    }\n\n    if (style !== null) {\n      var startOfToken = stream.pos - current.length;\n\n      var withCurrentIndent = startOfToken + (config.indentUnit * state.indentCount);\n\n      var newScopes = [];\n\n      for (var i = 0; i < state.scopes.length; i++) {\n        var scope = state.scopes[i];\n\n        if (scope.offset <= withCurrentIndent)\n          newScopes.push(scope);\n      }\n\n      state.scopes = newScopes;\n    }\n\n\n    return style;\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenizer: tokenBase,\n        scopes: [{offset: 0, type: \"sass\"}],\n        indentCount: 0,\n        cursorHalf: 0,  // cursor half tells us if cursor lies after (1)\n                        // or before (0) colon (well... more or less)\n        definedVars: [],\n        definedMixins: []\n      };\n    },\n    token: function(stream, state) {\n      var style = tokenLexer(stream, state);\n\n      state.lastToken = { style: style, content: stream.current() };\n\n      return style;\n    },\n\n    indent: function(state) {\n      return state.scopes[0].offset;\n    }\n  };\n}, \"css\");\n\nCodeMirror.defineMIME(\"text/x-sass\", \"sass\");\n\n});\n"],"sourceRoot":""}