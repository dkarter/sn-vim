{"version":3,"sources":["../node_modules/codemirror/mode/slim/slim.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js"],"names":["CodeMirror","defineMode","config","htmlMode","getMode","name","rubyMode","modes","html","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","push","RegExp","join","styleMap","closing","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","backup","pos","tokenize","style","restore","stream","state","maybeBackup","pat","offset","cur","current","idx","search","backUp","length","continueLine","column","stack","parent","indented","line","finishContinue","lineContinuable","match","eol","commaContinuable","rubyInQuote","endQuote","peek","rubyState","next","startRubySplat","runSplat","context","prev","eatSpace","startState","token","htmlLine","htmlState","startHtmlLine","lastTokenize","startHtmlMode","comment","skipToEnd","commentMode","attributeWrapper","eat","attributeWrapperAssign","attributeWrapperValue","ch","readQuoted","startAttributeWrapperMode","sub","subStream","StringStream","string","slice","tabSize","start","lastColumnPos","lastColumnValue","subMode","subState","firstSub","createMode","mode","query","spec","mimeModes","factory","hasOwnProperty","startSubMode","doctypeLine","_state","startLine","m","slimTag","slim","startOfLine","slimTagExtras","slimClass","slimAttribute","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","quote","embed","unescaped","nextTokenize","fresh","escaped","last","copyState","sol","indentation","blankLine","innerMode","defineMIME","mod","require","defaultTags","script","close","attrRegexpCache","getAttrRegexp","attr","regexp","getAttrValue","text","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","test","parserConfig","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","tags","configTags","configScript","scriptTypes","matches","toLowerCase","inTag","modeSpec","endTagA","endTag","localState","localMode","indent","local","textAfter","Pass","wordObj","words","o","e","keywordList","keywords","indentWords","dedentWords","opening","curPunc","chain","newtok","tokenBase","readBlockComment","regexpAhead","delim","propertyIsEnumerable","readHereDoc","eatWhile","varList","lastTok","more","depth","found","indexOf","tokenBaseUntilBrace","pop","tokenBaseOnce","alreadyCalled","type","phrase","mayIndent","indentUnit","continuedLine","kwtype","thisTok","word","firstChar","charAt","ct","closed","electricInput","lineComment","fold","registerHelper"],"mappings":"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","file":"static/js/14.7a359c44.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n"],"sourceRoot":""}