{"version":3,"sources":["../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/django/django.js"],"names":["CodeMirror","overlayMode","base","overlay","combine","startState","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","state","token","stream","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","mod","require","defaultTags","script","style","maybeBackup","pat","cur","current","close","search","backUp","length","match","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","test","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","hasOwnProperty","inTag","modeSpec","endTagA","endTag","localState","localMode","eol","local","Pass","defineMIME","keywords","filters","operators","wordOperators","tokenBase","tokenize","inVariable","inComment","next","inString","delimiter","previousTokenizer","escapeNext","eat","waitDot","peek","waitProperty","Error","waitPipe","waitFilter","eatSpace","foundVariable","keywordMatch","blockCommentTag","inBlockComment","skipToEnd","join","blockCommentStart","blockCommentEnd","htmlBase","djangoInner"],"mappings":"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","file":"static/js/11.746fb9f2.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function() {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\",\n                    \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\",\n                    \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\",\n                    \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\",\n                    \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\",\n                    \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\",\n                    \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\",\n                    \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\",\n                   \"default\", \"default_if_none\", \"dictsort\",\n                   \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\",\n                   \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\",\n                   \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\",\n                   \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\",\n                   \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\",\n                   \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\",\n                   \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\",\n                   \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\",\n                   \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\",\n                   \"unordered_list\", \"upper\", \"urlencode\", \"urlize\",\n                   \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\");\n\n    // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n    function tokenBase (stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      }\n\n      // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n      return null;\n    }\n\n    // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n    function inString (delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next();\n\n          // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    // Apply Django template variable syntax highlighting\n    function inVariable (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to find the variable\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to match an operator\n      if (stream.match(operators)) {\n        return \"operator\";\n      }\n\n      // Attempt to match a word operator\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      }\n\n      // Attempt to match a keyword\n      var keywordMatch = stream.match(keywords);\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n        return \"keyword\";\n      }\n\n      // Attempt to match a variable\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false;  // Release the \"lock\"\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    // Mark everything as comment inside the tag and the tag itself.\n    function inComment (stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase\n      else stream.skipToEnd()\n      return \"comment\";\n    }\n\n    // Mark everything as a comment until the `blockcomment` tag closes.\n    function inBlockComment (stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n\n  CodeMirror.defineMode(\"django\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});\n"],"sourceRoot":""}