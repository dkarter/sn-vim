{"version":3,"sources":["../node_modules/codemirror/addon/mode/multiplex.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/htmlembedded/htmlembedded.js"],"names":["CodeMirror","multiplexingMode","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","from","returnEnd","found","length","m","exec","index","startState","innerActive","inner","copyState","state","mode","token","stream","curInner","oldContent","close","sol","this","pos","parseDelimiters","match","delimStyle","innerToken","innerStyle","cutOff","Infinity","i","other","open","outerIndent","indent","possibleOuterIndent","Pass","outerToken","textAfter","line","blankLine","electricChars","innerMode","mod","require","defaultTags","script","style","maybeBackup","pat","cur","current","search","backUp","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","getTagRegexp","tagName","anchored","addTags","to","tag","dest","source","unshift","findMatchingMode","tagInfo","tagText","spec","test","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","hasOwnProperty","inTag","modeSpec","endTagA","endTag","localState","localMode","eol","local","defineMIME","closeComment","openComment","skipTo","skipToEnd","scriptStartRegex","scriptEndRegex","scriptingModeSpec"],"mappings":"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","file":"static/js/10.8c4735d0.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"htmlembedded\", function(config, parserConfig) {\n    var closeComment = parserConfig.closeComment || \"--%>\"\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, \"htmlmixed\"), {\n      open: parserConfig.openComment || \"<%--\",\n      close: closeComment,\n      delimStyle: \"comment\",\n      mode: {token: function(stream) {\n        stream.skipTo(closeComment) || stream.skipToEnd()\n        return \"comment\"\n      }}\n    }, {\n      open: parserConfig.open || parserConfig.scriptStartRegex || \"<%\",\n      close: parserConfig.close || parserConfig.scriptEndRegex || \"%>\",\n      mode: CodeMirror.getMode(config, parserConfig.scriptingModeSpec)\n    });\n  }, \"htmlmixed\");\n\n  CodeMirror.defineMIME(\"application/x-ejs\", {name: \"htmlembedded\", scriptingModeSpec:\"javascript\"});\n  CodeMirror.defineMIME(\"application/x-aspx\", {name: \"htmlembedded\", scriptingModeSpec:\"text/x-csharp\"});\n  CodeMirror.defineMIME(\"application/x-jsp\", {name: \"htmlembedded\", scriptingModeSpec:\"text/x-java\"});\n  CodeMirror.defineMIME(\"application/x-erb\", {name: \"htmlembedded\", scriptingModeSpec:\"ruby\"});\n});\n"],"sourceRoot":""}